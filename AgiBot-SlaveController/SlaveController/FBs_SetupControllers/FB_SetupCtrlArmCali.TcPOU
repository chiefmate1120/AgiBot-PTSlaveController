<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_SetupCtrlArmCali" Id="{d9d3f471-7846-407b-862d-a0300683015d}" SpecialFunc="None">
    <Declaration><![CDATA[// Brief: Slave Arm Adjust
FUNCTION_BLOCK PUBLIC FB_SetupCtrlArmCali EXTENDS FB_SetupArmCtrlBase
VAR
	m_lastLinkEncoder :ARRAY [1..5] OF DINT;
	
	//link encoder calibration timer
	m_linkEncPosFristCaliTon :ARRAY [1..5] OF TON;
	m_linkEncPosSecondCaliTon :ARRAY [1..5] OF TON;
	m_linkEncPosHomeCaliTon :ARRAY [1..5] OF TON;
	
	//link encoder calibration tigger time
	m_caliTime : TIME:= T#3S;
	
	//joint link zero crossing or not
	m_linkZeroCrossOrNot : Vec8i;
	
	linkLimitFristPos : ARRAY [1..4] OF Vec8di;
	linkLimitSecondPos : ARRAY [1..4] OF Vec8di;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="calcCmdJntPos" Id="{f8ef8032-2868-40a2-9c7e-ec80d50cb57a}">
      <Declaration><![CDATA[// override this function in each exact controller
METHOD PROTECTED calcCmdJntPos : BOOL
VAR_IN_OUT CONSTANT
	i_setupArm	:FB_SetupArm;
END_VAR
VAR
	i:INT;
	armIdx : INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[armIdx := i_setupArm.armIdx;
FOR i:= 1 TO g_setupJntNum DO
	IF m_jntOPMode[i] = DriverOPMode_Trq THEN
		m_cmdJntPos[i]:=i_setupArm.curJntPos[i];
	END_IF
	
	//determine link encoder cross zero
	IF ABS(i_setupArm.m_joints[i].m_motorInputs.m_linkEncoder - m_lastLinkEncoder[i]) > GVL_SetupMotorParameters.g_absEncoderRes[i] /2 THEN
		 GVL_armCali.g_linkZeroCrossOrNot[armIdx][i] :=1;
	END_IF
	m_lastLinkEncoder[i] := i_setupArm.m_joints[i].m_motorInputs.m_linkEncoder;
	
	//link encoder calibration 
	m_linkEncPosFristCaliTon[i](IN:= GVL_armCali.g_linkEncFristPosCali[armIdx][i], PT:= m_caliTime, Q=>  GVL_armCali.g_linkEncFristCaliTrigger[armIdx][i], ET=> );
	m_linkEncPosSecondCaliTon[i](IN:=  GVL_armCali.g_linkEncSecondPosCali[armIdx][i], PT:= m_caliTime, Q=>  GVL_armCali.g_linkEncSecondCaliTrigger[armIdx][i], ET=> );
	m_linkEncPosHomeCaliTon[i](IN:=  GVL_armCali.g_linkEncHomePosCali[armIdx][i], PT:= m_caliTime, Q=>  GVL_armCali.g_linkEncHomePosCaliTrigger[armIdx][i], ET=> );
	IF  GVL_armCali.g_linkEncFristCaliTrigger[armIdx][i] THEN
		 linkLimitFristPos[armIdx][i] := i_setupArm.m_joints[i].m_motorInputs.m_linkEncoder;
		 IF linkLimitFristPos[armIdx][i] < linkLimitSecondPos[armIdx][i] THEN
			GVL_armCali.g_linkLimitFristPos[armIdx][i] := linkLimitFristPos[armIdx][i];
			GVL_armCali.g_linkLimitSecondPos[armIdx][i] := linkLimitSecondPos[armIdx][i];
		ELSE
			GVL_armCali.g_linkLimitFristPos[armIdx][i] := linkLimitSecondPos[armIdx][i];
			GVL_armCali.g_linkLimitSecondPos[armIdx][i] := linkLimitFristPos[armIdx][i];
		END_IF
	ELSIF  GVL_armCali.g_linkEncSecondCaliTrigger[armIdx][i] THEN
		linkLimitSecondPos[armIdx][i] := i_setupArm.m_joints[i].m_motorInputs.m_linkEncoder;
		IF linkLimitFristPos[armIdx][i] < linkLimitSecondPos[armIdx][i] THEN
			GVL_armCali.g_linkLimitFristPos[armIdx][i] := linkLimitFristPos[armIdx][i];
			GVL_armCali.g_linkLimitSecondPos[armIdx][i] := linkLimitSecondPos[armIdx][i];
		ELSE
			GVL_armCali.g_linkLimitFristPos[armIdx][i] := linkLimitSecondPos[armIdx][i];
			GVL_armCali.g_linkLimitSecondPos[armIdx][i] := linkLimitFristPos[armIdx][i];
		END_IF
		 
	ELSIF  GVL_armCali.g_linkEncHomePosCaliTrigger[armIdx][i] THEN
		 GVL_armCali.g_linkHomePos[armIdx][i] := i_setupArm.m_joints[i].m_motorInputs.m_linkEncoder;
	END_IF
	
	
	
END_FOR



]]></ST>
      </Implementation>
    </Method>
    <Method Name="calcCmdJntTrq" Id="{68758cff-f377-4f45-b570-0b346820f544}">
      <Declaration><![CDATA[// override this function in each exact controller
METHOD PROTECTED calcCmdJntTrq : BOOL
VAR_IN_OUT CONSTANT
	i_setupArm	:FB_SetupArm;
END_VAR
VAR
	i :INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// set joint torque to zero in default
m_cmdJntTrq := g_zeroVec5d;

FOR i := 1 TO 5 DO
	IF  GVL_armCali.g_jointIntoCaliState[i_setupArm.armIdx][i] THEN
		m_jntEnableFlag[i] :=1;
		m_jntOPMode[i]:=DriverOPMode_Trq;
	ELSE
		m_jntEnableFlag[i] :=0;
		m_jntOPMode[i]:=DriverOPMode_Pos;
	END_IF
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Method Name="init" Id="{e1f58067-c6cf-4730-913c-71e1705fac6f}">
      <Declaration><![CDATA[METHOD PUBLIC init : BOOL
VAR_IN_OUT CONSTANT
	i_setupArm	:FB_SetupArm;
END_VAR
VAR_IN_OUT 
	r_setupArmCtrlCmd :ST_SetupArmCtrlCmds;
END_VAR
VAR
	i :INT;
	armId :INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[armId := i_setupArm.armIdx;
// check if to hold the command joint position unchanged
m_holdLastCmds := checkToHoldLastCmds(i_setupArm);

//init
SUPER^.Init(i_setupArm,r_setupArmCtrlCmd);

FOR i := 1 TO 3 DO
	GVL_armCali.g_linkZeroCrossOrNot[i_setupArm.armIdx][i+5] :=0;
	m_lastLinkEncoder[i] := i_setupArm.m_joints[i].m_motorInputs.m_linkEncoder;
END_FOR

linkLimitFristPos[armId] := g_zeroVec8di;
linkLimitSecondPos[armId] := g_zeroVec8di;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_SetupCtrlArmCali">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_SetupCtrlArmCali.calcCmdJntPos">
      <LineId Id="165" Count="0" />
      <LineId Id="113" Count="0" />
      <LineId Id="116" Count="1" />
      <LineId Id="114" Count="0" />
      <LineId Id="160" Count="0" />
      <LineId Id="192" Count="3" />
      <LineId Id="191" Count="0" />
      <LineId Id="190" Count="0" />
      <LineId Id="161" Count="0" />
      <LineId Id="138" Count="0" />
      <LineId Id="162" Count="1" />
      <LineId Id="139" Count="1" />
      <LineId Id="183" Count="5" />
      <LineId Id="182" Count="0" />
      <LineId Id="150" Count="0" />
      <LineId Id="189" Count="0" />
      <LineId Id="175" Count="6" />
      <LineId Id="151" Count="2" />
      <LineId Id="141" Count="0" />
      <LineId Id="156" Count="0" />
      <LineId Id="147" Count="0" />
      <LineId Id="158" Count="0" />
      <LineId Id="115" Count="0" />
      <LineId Id="129" Count="0" />
      <LineId Id="131" Count="0" />
      <LineId Id="137" Count="0" />
      <LineId Id="136" Count="0" />
    </LineIds>
    <LineIds Name="FB_SetupCtrlArmCali.calcCmdJntTrq">
      <LineId Id="217" Count="0" />
      <LineId Id="175" Count="0" />
      <LineId Id="238" Count="0" />
      <LineId Id="231" Count="2" />
      <LineId Id="247" Count="0" />
      <LineId Id="235" Count="0" />
      <LineId Id="248" Count="0" />
      <LineId Id="236" Count="1" />
      <LineId Id="53" Count="0" />
    </LineIds>
    <LineIds Name="FB_SetupCtrlArmCali.init">
      <LineId Id="221" Count="0" />
      <LineId Id="157" Count="4" />
      <LineId Id="204" Count="0" />
      <LineId Id="201" Count="0" />
      <LineId Id="208" Count="0" />
      <LineId Id="205" Count="1" />
      <LineId Id="189" Count="0" />
      <LineId Id="219" Count="0" />
      <LineId Id="12" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>