<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_CartSupportLeg" Id="{55d7523f-ccb9-4e03-a220-3c80fe21a70d}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_CartSupportLeg EXTENDS FB_CartCtrlBase
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR
VAR

	m_actJntPos: Vec8d;
	m_tarJntPos: Vec8d;
	m_initJntPos : Vec8d;
	m_tarJntInc : Vec8d;
	m_incJntPos : Vec8d;
	m_maxJntCurrent : ARRAY [1..2] OF LREAL := [800,800];
	
	//output support leg break IO
	m_supportLegBreak :ARRAY [1..2] OF  DINT;
	
	// time threshold to 5-8joint after it's enabled
	m_cartAdjustStartWaitTime :LREAL := 0.2;
	
	//adjust start  time 
	m_adjustStartTime :LREAL;

	//support leg break close time
	m_breakCloseTime :ARRAY [1..2] OF   LREAL;
	
	//trocar number
	m_trocarNum : INT;
	
	m_jntOTG :ARRAY [1..2] OF FB_secOrdTrajFilter;
	
	//check error
	m_errorID :Vec2i;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
]]></ST>
    </Implementation>
    <Method Name="calcCmdJntPos" Id="{6b4938eb-71dc-4086-a7ef-b878d82f7a7c}">
      <Declaration><![CDATA[// override this function in each exact controller
METHOD PROTECTED calcCmdJntPos : BOOL
VAR_IN_OUT CONSTANT
	// slave cart joint data
	i_slaveCart :FB_SlaveCart;
END_VAR

VAR
	i:INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[//In this method, 8 represents the overhang angle
m_adjustStartTime :=LIMIT(0, m_adjustStartTime + g_cartCtrlCycleTime, 10);
m_actJntPos := i_slaveCart.curJntPos;
IF SafetyCheck.m_safetyCheckData.m_cartSteadyFootErr THEN
	m_cmdJntPos[1] := m_actJntPos[1];
	m_cmdJntPos[2] := m_actJntPos[2];
	RETURN;
END_IF

IF m_trocarNum = 0 OR NOT i_slaveCart.m_drivingLeverSensorManual THEN
	m_isFinished :=supportLegUp(i_slaveCart );
ELSE
	m_isFinished :=supportLegDown(i_slaveCart );
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Method Name="init" Id="{c2bc8804-7c26-45e5-860d-db010c88639a}">
      <Declaration><![CDATA[// override this function in each exact controller
// NOTICE: set joint control mode here, and do some initialization if needed
METHOD PUBLIC init : BOOL
VAR_IN_OUT CONSTANT
	i_slaveCart	:FB_SlaveCart;
END_VAR
VAR_IN_OUT 
	r_cartCtrlCmd :ST_SlaveArmCtrlCmds;
END_VAR
VAR
	i:INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[//m_holdLastCmds := checkToHoldLastCmds(i_slaveCart);
m_holdLastCmds := checkToHoldLastCmds(i_slaveCart);

SUPER^.init(i_slaveCart,r_cartCtrlCmd);

m_jntEnableFlag[1] :=1;
m_jntEnableFlag[2] :=1;
m_trocarNum := i_slaveCart.m_trocarOnFlag;

IF m_trocarNum = 0 THEN
	m_jntOPMode[1]:= DriverOPMode_Trq;
	m_jntOPMode[2]:= DriverOPMode_Trq;	
ELSE
	m_jntOPMode[1]:= DriverOPMode_Pos;
	m_jntOPMode[2]:= DriverOPMode_Pos;
END_IF

FOR i:=1 TO 2 DO
	m_errorID[i] :=0;
	m_incJntPos[i] :=0;
	m_breakCloseTime[i] := 0;
	m_initJntPos[i] := i_slaveCart.curJntPos[i];
	m_jntOTG[i].init(i_curCmdPos:= m_cmdJntPos[i], i_curCmdVel:= 0, i_maxV:=GVL_CartControlParameters.g_maxJntVel[i] , i_maxA:=GVL_CartControlParameters.g_maxJntAcc[i] , i_Ts:=g_cartCtrlCycleTime );
END_FOR

m_adjustStartTime := 0;
// update commands to arm
copyCmds(r_cartCtrlCmd);]]></ST>
      </Implementation>
    </Method>
    <Property Name="supportLegBreak" Id="{2dbeebf6-09fd-4537-af38-edf90364d7ea}">
      <Declaration><![CDATA[PROPERTY supportLegBreak : ARRAY [1..2] OF DINT]]></Declaration>
      <Get Name="Get" Id="{d647eb12-5653-4d84-abe5-bd3c0768571e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[supportLegBreak := m_supportLegBreak;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="supportLegDown" Id="{592d6ff1-ec90-406e-a353-607d1c838d00}">
      <Declaration><![CDATA[METHOD supportLegDown : BOOL
VAR_IN_OUT CONSTANT
	// slave cart joint data
	i_slaveCart :FB_SlaveCart;
END_VAR
VAR
	i : INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[
FOR i:=1 TO 2 DO
	IF ABS(i_slaveCart.curJntCurrent[i]) > m_maxJntCurrent[i] AND ABS(i_slaveCart.curJntVel[i]) < 0.001 AND m_adjustStartTime >= 2  THEN
		m_breakCloseTime[i] := m_breakCloseTime[i] + g_cartCtrlCycleTime;
		IF m_breakCloseTime[i] > 0.1 THEN
			m_supportLegBreak[i] := 1;
		END_IF
		m_tarJntPos[i] := m_actJntPos[i];
	END_IF
	
	IF 0 = m_supportLegBreak[i] THEN
		IF ABS(m_tarJntPos[i]) > 0.03 THEN
			m_incJntPos[i] := m_incJntPos[i] -  GVL_CartControlParameters.g_maxJntVel[i]/5 * g_cartCtrlCycleTime;
		ELSE
			m_incJntPos[i] := m_incJntPos[i] -  GVL_CartControlParameters.g_maxJntVel[i] * g_cartCtrlCycleTime;
		END_IF
		m_tarJntPos[i] := m_initJntPos[i] + m_incJntPos[i];
	END_IF
	m_jntOTG[i].run(i_targetPos:= m_tarJntPos[i], i_targetVel:= 0.0, o_cmdAcc=> , o_cmdVel=> , o_cmdPos=>m_cmdJntPos[i] );
END_FOR

IF  m_supportLegBreak[1] = 1 AND m_supportLegBreak[2] = 1 AND m_breakCloseTime[1] > 0.2 AND m_breakCloseTime[2] > 0.2  THEN
	supportLegDown := TRUE;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="supportLegUp" Id="{d8e76cea-9d3c-47f3-b5b0-6ed4dc8fff69}">
      <Declaration><![CDATA[METHOD supportLegUp : BOOL
VAR_IN_OUT CONSTANT
	// slave cart joint data
	i_slaveCart :FB_SlaveCart;
END_VAR
VAR
	i : INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[m_supportLegBreak[1] := 0;
m_supportLegBreak[2] := 0;
m_jntOPMode[1]:= DriverOPMode_Trq;
m_jntOPMode[2]:= DriverOPMode_Trq;	
	
IF m_adjustStartTime > m_cartAdjustStartWaitTime THEN
	FOR i:=1 TO 2 DO
		m_cmdJntTrq[i] := 0;
	END_FOR
	
	IF (i_slaveCart.m_supportLegSensor[1]=0 OR m_errorID[1]<>0) AND (i_slaveCart.m_supportLegSensor[2]=0 OR m_errorID[1]<>0) THEN
		supportLegUp := TRUE;
	END_IF
	
	IF m_adjustStartTime > 2.0 THEN
		FOR i:=1 TO 2 DO
			IF i_slaveCart.m_supportLegSensor[i]=1 THEN
				m_cmdJntTrq[i] := 850;
			END_IF
			IF ABS(i_slaveCart.curJntCurrent[i]) > m_maxJntCurrent[i] AND ABS(i_slaveCart.curJntVel[i]) < 0.001 AND ABS(i_slaveCart.curJntPos[i]-m_initJntPos[i])>0.2 AND i_slaveCart.m_supportLegSensor[i]=1 THEN
				m_errorID[i] := 1;
			ELSIF  ABS(i_slaveCart.curJntCurrent[i]) > m_maxJntCurrent[i] AND ABS(i_slaveCart.curJntVel[i]) < 0.001 AND ABS(i_slaveCart.curJntPos[i]-m_initJntPos[i])<0.2 AND m_adjustStartTime>5 AND i_slaveCart.m_supportLegSensor[i]=1 THEN
				m_errorID[i] := 2;
			END_IF
		END_FOR
	END_IF
END_IF]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_CartSupportLeg">
      <LineId Id="52" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_CartSupportLeg.calcCmdJntPos">
      <LineId Id="246" Count="3" />
      <LineId Id="264" Count="0" />
      <LineId Id="266" Count="1" />
      <LineId Id="265" Count="0" />
      <LineId Id="268" Count="0" />
      <LineId Id="250" Count="4" />
      <LineId Id="14" Count="0" />
    </LineIds>
    <LineIds Name="FB_CartSupportLeg.init">
      <LineId Id="88" Count="0" />
      <LineId Id="87" Count="0" />
      <LineId Id="89" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="37" Count="0" />
      <LineId Id="102" Count="0" />
      <LineId Id="155" Count="0" />
      <LineId Id="168" Count="0" />
      <LineId Id="40" Count="0" />
      <LineId Id="154" Count="0" />
      <LineId Id="149" Count="0" />
      <LineId Id="151" Count="2" />
      <LineId Id="150" Count="0" />
      <LineId Id="104" Count="0" />
      <LineId Id="129" Count="0" />
      <LineId Id="201" Count="0" />
      <LineId Id="196" Count="0" />
      <LineId Id="198" Count="2" />
      <LineId Id="197" Count="0" />
      <LineId Id="57" Count="0" />
      <LineId Id="22" Count="1" />
      <LineId Id="21" Count="0" />
    </LineIds>
    <LineIds Name="FB_CartSupportLeg.supportLegBreak.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_CartSupportLeg.supportLegDown">
      <LineId Id="18" Count="0" />
      <LineId Id="26" Count="21" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_CartSupportLeg.supportLegUp">
      <LineId Id="53" Count="1" />
      <LineId Id="71" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="72" Count="0" />
      <LineId Id="56" Count="3" />
      <LineId Id="73" Count="0" />
      <LineId Id="61" Count="2" />
      <LineId Id="74" Count="0" />
      <LineId Id="76" Count="0" />
      <LineId Id="102" Count="4" />
      <LineId Id="109" Count="2" />
      <LineId Id="107" Count="0" />
      <LineId Id="92" Count="0" />
      <LineId Id="75" Count="0" />
      <LineId Id="21" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>