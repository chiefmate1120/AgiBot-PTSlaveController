<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.11">
  <POU Name="FB_SetupCtrlCycleTest" Id="{ef3f192c-1337-4520-8632-b2028c17db38}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_SetupCtrlCycleTest EXTENDS FB_SetupArmCtrlBase
VAR_INPUT
END_VAR
VAR_OUTPUT
END_VAR

VAR
	//arm id
	m_armId:INT;			
	
	//test step
	m_testStep:INT:=-1;
	
	//motion start
	m_startMotion:BOOL;
	m_startMotionLast:BOOL;
	
	//time
	m_time:LREAL;
		
	//test point
	m_testPoint:INT;
	
	//DH joint position	
	m_homeDHJntPos,m_startDHJntPos,m_endDHJntPos:Vec5d;
	
	//startJntPos,endJntPos :Vec8d;
	m_initJntPos,m_startJntPos,m_endJntPos :Vec5d;
	
	//joint position gap
	m_jntDist:Vec5d:=[30.0*g_deg2Rad,30.0*g_deg2Rad,0.030,30.0*g_deg2Rad,30.0*g_deg2Rad];	
	
	//planner
	m_Planner: FB_setupTrajMoveJ;
	
	//trajectory velocity/acceleration/jerk
	m_maxjntVel:Vec5d:=[2(1),0.01, 2(5*g_deg2Rad)];
	m_maxjntAcc:Vec5d:=[2(1),0.5,2(0.5)];
	m_maxjntJerk:Vec5d:=[2(1),1.0,2(2.0)];
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="calcCmdJntPos" Id="{eb13526c-7fb4-4208-91c1-7066bf7159db}">
      <Declaration><![CDATA[// override this function in each exact controller
METHOD PROTECTED calcCmdJntPos : BOOL
VAR_IN_OUT CONSTANT
	i_setupArm	:FB_SetupArm;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
//init parameters flag
m_startMotion:=gvl_testCycle.g_startMotion[m_armId];
IF (m_startMotionLast=FALSE) AND (m_startMotion=TRUE)THEN
	m_testStep:=0;
END_IF
m_startMotionLast:=m_startMotion;

//frequency test and step test
testMotion(i_setupArm);

//update the information
updateInfo(i_setupArm);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="init" Id="{b2fcb670-b276-44db-85af-35a53a706bd7}">
      <Declaration><![CDATA[// override this function in each exact controller
// NOTICE: set joint control mode here, and do some initialization if needed
METHOD PUBLIC init : BOOL
VAR_IN_OUT CONSTANT
	i_setupArm	:FB_SetupArm;
END_VAR
VAR_IN_OUT 
	r_setupArmCtrlCmd :ST_SetupArmCtrlCmds;
END_VAR
VAR
	i:INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^.Init(i_setupArm,r_setupArmCtrlCmd);
m_jntEnableFlag:=g_onesVec5i; m_jntEnableFlag[1]:=0; m_jntEnableFlag[2]:=0;
m_jntOPMode:= g_setupAllPosMode;

//arm id and joint position initial
m_armId:=i_setupArm.armIdx;

//target DH joint position
FOR i:=1 TO 5 BY 1 DO
	m_homeDHJntPos[i]:=(GVL_SetupMotorParameters.g_minJntPos[m_armId,i]+GVL_SetupMotorParameters.g_maxJntPos[m_armId,i])/2;
	m_startDHJntPos[i]:=m_homeDHJntPos[i]-m_jntDist[i];
	m_endDHJntPos[i]:=m_homeDHJntPos[i]+m_jntDist[i];
END_FOR

//velocity and acceleration
vecMultiNum(m_maxjntVel,5,m_maxjntAcc);
vecMultiNum(m_maxjntAcc,5,m_maxjntJerk);


]]></ST>
      </Implementation>
    </Method>
    <Method Name="testMotion" Id="{feac8b19-d536-4239-9cdc-c03303ae0b3f}">
      <Declaration><![CDATA[METHOD testMotion : BOOL
VAR_INPUT
	i_setupArm	:FB_SetupArm;
END_VAR
VAR
	homeDHPos,startDHPos,endDHPos :Vec5d;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
CASE m_testStep OF
	0: //init
		m_testPoint:=1;		
		m_testStep:=10;


	10: //Trajectory parameter initialization
		startDHPos:=i_setupArm.curJntPos;
		IF (m_testPoint=1) THEN
			endDHPos:=m_startDHJntPos;
		ELSIF (m_testPoint=2) THEN
			endDHPos:=m_homeDHJntPos;
		ELSIF (m_testPoint=3) THEN
			endDHPos:=m_endDHJntPos;
		END_IF
		
		m_startJntPos:=startDHPos;
		m_endJntPos:=endDHPos;
		m_Planner.init(i_startJntPos:= m_startJntPos, 	i_targetJntPos:= m_endJntPos, 	i_maxJntVel:= m_maxjntVel, 	i_maxJntAcc:= m_maxjntAcc, 	i_maxJntJerk:= m_maxjntJerk);
		IF (m_Planner.isGene=FALSE) THEN
			m_testStep:=30;
		ELSE
			m_time:=0; m_testStep:=20;
		END_IF
				
	
	20: //start motion
		m_time:=m_time+g_setupArmCtrlCycleTime;
		m_Planner.evaluate(t:= m_time, jntPos=> m_cmdJntPos, jntVel=> m_cmdJntVel, jntAcc=> m_cmdJntAcc);
		
		IF (m_time>m_Planner.duration) THEN
			m_testStep:=10;			
			m_testPoint:=m_testPoint+1;
			IF (m_testPoint>3) THEN
				m_testPoint:=1;
			END_IF
		END_IF		
		
		//end the motion
		IF (m_startMotion=FALSE) THEN
			m_testStep:=30;
		END_IF
		
		
	30: //end the motion
		m_testStep:=-1;
END_CASE
]]></ST>
      </Implementation>
    </Method>
    <Method Name="updateInfo" Id="{2ab0d415-b055-43cc-9ef2-86a60f55d1b6}">
      <Declaration><![CDATA[METHOD updateInfo : BOOL
VAR_INPUT
	i_setupArm	:FB_SetupArm;
END_VAR
VAR
	i:INT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[
FOR i:=1 TO g_sJntNum BY 1 DO
	gvl_TestCycle.g_setupArmMotorEncoder[m_armId][i]:=i_setupArm.m_joints[i].m_motorInputs.m_motorEncoder;
	gvl_TestCycle.g_setupArmjntEncoder[m_armId][i]:=i_setupArm.m_joints[i].m_motorInputs.m_linkEncoder;
END_FOR
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_SetupCtrlCycleTest">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_SetupCtrlCycleTest.calcCmdJntPos">
      <LineId Id="14" Count="0" />
      <LineId Id="126" Count="10" />
      <LineId Id="10" Count="0" />
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="FB_SetupCtrlCycleTest.init">
      <LineId Id="11" Count="0" />
      <LineId Id="62" Count="1" />
      <LineId Id="29" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="86" Count="1" />
      <LineId Id="89" Count="0" />
      <LineId Id="92" Count="0" />
      <LineId Id="90" Count="1" />
      <LineId Id="32" Count="0" />
      <LineId Id="94" Count="0" />
      <LineId Id="93" Count="0" />
      <LineId Id="97" Count="0" />
      <LineId Id="96" Count="0" />
      <LineId Id="99" Count="1" />
      <LineId Id="98" Count="0" />
    </LineIds>
    <LineIds Name="FB_SetupCtrlCycleTest.testMotion">
      <LineId Id="8" Count="1" />
      <LineId Id="22" Count="1" />
      <LineId Id="12" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="24" Count="0" />
      <LineId Id="34" Count="7" />
      <LineId Id="18" Count="0" />
      <LineId Id="25" Count="0" />
      <LineId Id="53" Count="1" />
      <LineId Id="48" Count="4" />
      <LineId Id="45" Count="1" />
      <LineId Id="26" Count="0" />
      <LineId Id="55" Count="18" />
      <LineId Id="33" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_SetupCtrlCycleTest.updateInfo">
      <LineId Id="7" Count="0" />
      <LineId Id="9" Count="2" />
      <LineId Id="8" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>